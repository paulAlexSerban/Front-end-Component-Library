<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Loop Use Case Experiments</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
  {{{feLibs 'library' 'modules' 'event-loop-use-case-experiments' 'event-loop-use-case-progress-indication' 'js'}}}
</head>

<body class='container'>
  <header class='row'>
    <h1>Event Loop Use Case - Progress Indication</h1>
  </header>

  <main class="row">
    <section>
      <h2>Un-optimized Progress Indication</h2>
      <p>A benefit of splitting heavy tasks for browser scripts is that we can show progress indication.</p>
      <p>Changes to DOM are painted only after the currently running task is completed, irrespective of how long it
        takes</p>
      <p>Here is a demo, changes to <code>i</code> wonâ€™t show up until the function finishes:</p>

      <p>Un-optimized progress: <span id="un-optimized-progress-indicator"></span></p>
      <pre>

const progress = document.getElementById('un-optimized-progress-indicator');
function count() {
  for (let i = 0; i < 1e6; i++) {
    i++;
    progress.innerHTML = i;
  }
}

count();
    </pre>
      <article>
        <p>But we also may want to show something during the task, e.g. a progress bar</p>
      </article>
      <button class="btn btn-danger" id='button-un-optimized-progress-indicator'>Run</button>

    </section>


    <section>
      <h2>Split Task with setTimeout</h2>
      <p>If we split the heavy task into pieces using setTimeout, then changes are painted out in-between them.</p>
      <p>Split task progress: <span id="split-task-progress-indicator"></span></p>
      <pre>
let i = 0;
function count() {
  // do a piece of the heavy job (*)
  do {
    i++;
    progress.innerHTML = i;
  } while (i % 1e3 != 0);

  if (i < 1e7) {
    setTimeout(count);
  }
}
count();
      </pre>
      <button class="btn btn-warning" id='button-split-task-progress-indicator'>Run</button>
    </section>

  </main>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous" async
    defer></script>
</body>

</html>