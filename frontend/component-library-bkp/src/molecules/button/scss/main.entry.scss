@use "sass:color";
@use "sass:map";

@import "~ScssAbstracts";

/* ------------------------------------ *\
 * BUTTON
\* ------------------------------------ */

$block: "button";

$color-patterns: (
    "primary": (
        "background-color": "%bkg-color-primary",
        "text-color": "%txt-color-white",
    ),
    "secondary": (
        "background-color": "%bkg-color-secondary",
        "text-color": " %txt-color-jet-black",
    ),
    "success": (
        "background-color": "%bkg-color-success",
        "text-color": "%txt-color-white",
    ),
    "danger": (
        "background-color": "%bkg-color-danger",
        "text-color": "%txt-color-white",
    ),
    "warning": (
        "background-color": "%bkg-color-warning",
        "text-color": "%txt-color-jet-black",
    ),
);

.#{$block} {
    @include element("base") {
        @include font($button);
        @include use-extends((cursor-pointer, display-inline-block, no-border));
        padding: 16px;

        &:disabled {
            cursor: not-allowed;

            background-color: get-color($c-light, gainsboro-white);
        }

        @each $name, $color in $color-patterns {
            @include m($name) {
                @extend #{map.get($color, "background-color")};
                @extend #{map.get($color, "text-color")};
            }
        }

        @include m("isAnimated") {
            @include transition($transition-property: transform, $transition-time: 0.3s);

            &:hover:not(:disabled) {
                transform: scale(1.05);
            }

            &:active {
                transform: scale(0.95);
            }
        }

        @include m("success") {
            &:active {
                box-shadow: 0 0 0 convert-rem(3px) rgba(get-color($c-green, green-cyan), 0.5);
            }
        }

        @include m("secondary") {
            box-shadow: get-color($c-dark, dark-15) 0 0 0 convert-rem(1px) inset;
        }

        @include m("rounded") {
            border-radius: 6px;
        }
    }
}
