<html>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200">
  <style>
    /* ! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com */
    *,
    ::after,
    ::before {
      box-sizing: border-box;
      border-width: 0;
      border-style: solid;
      border-color: #e5e7eb
    }

    ::after,
    ::before {
      --tw-content: ''
    }

    :host,
    html {
      line-height: 1.5;
      -webkit-text-size-adjust: 100%;
      -moz-tab-size: 4;
      tab-size: 4;
      font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
      font-feature-settings: normal;
      font-variation-settings: normal;
      -webkit-tap-highlight-color: transparent
    }

    body {
      margin: 0;
      line-height: inherit
    }

    hr {
      height: 0;
      color: inherit;
      border-top-width: 1px
    }

    abbr:where([title]) {
      -webkit-text-decoration: underline dotted;
      text-decoration: underline dotted
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-size: inherit;
      font-weight: inherit
    }

    a {
      color: inherit;
      text-decoration: inherit
    }

    b,
    strong {
      font-weight: bolder
    }

    code,
    kbd,
    pre,
    samp {
      font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
      font-feature-settings: normal;
      font-variation-settings: normal;
      font-size: 1em
    }

    small {
      font-size: 80%
    }

    sub,
    sup {
      font-size: 75%;
      line-height: 0;
      position: relative;
      vertical-align: baseline
    }

    sub {
      bottom: -.25em
    }

    sup {
      top: -.5em
    }

    table {
      text-indent: 0;
      border-color: inherit;
      border-collapse: collapse
    }

    button,
    input,
    optgroup,
    select,
    textarea {
      font-family: inherit;
      font-feature-settings: inherit;
      font-variation-settings: inherit;
      font-size: 100%;
      font-weight: inherit;
      line-height: inherit;
      color: inherit;
      margin: 0;
      padding: 0
    }

    button,
    select {
      text-transform: none
    }

    [type=button],
    [type=reset],
    [type=submit],
    button {
      -webkit-appearance: button;
      background-color: transparent;
      background-image: none
    }

    :-moz-focusring {
      outline: auto
    }

    :-moz-ui-invalid {
      box-shadow: none
    }

    progress {
      vertical-align: baseline
    }

    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
      height: auto
    }

    [type=search] {
      -webkit-appearance: textfield;
      outline-offset: -2px
    }

    ::-webkit-search-decoration {
      -webkit-appearance: none
    }

    ::-webkit-file-upload-button {
      -webkit-appearance: button;
      font: inherit
    }

    summary {
      display: list-item
    }

    blockquote,
    dd,
    dl,
    figure,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    hr,
    p,
    pre {
      margin: 0
    }

    fieldset {
      margin: 0;
      padding: 0
    }

    legend {
      padding: 0
    }

    menu,
    ol,
    ul {
      list-style: none;
      margin: 0;
      padding: 0
    }

    dialog {
      padding: 0
    }

    textarea {
      resize: vertical
    }

    input::placeholder,
    textarea::placeholder {
      opacity: 1;
      color: #9ca3af
    }

    [role=button],
    button {
      cursor: pointer
    }

    :disabled {
      cursor: default
    }

    audio,
    canvas,
    embed,
    iframe,
    img,
    object,
    svg,
    video {
      display: block;
      vertical-align: middle
    }

    img,
    video {
      max-width: 100%;
      height: auto
    }

    [hidden] {
      display: none
    }

    *,
    ::before,
    ::after {
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-rotate: 0;
      --tw-skew-x: 0;
      --tw-skew-y: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-pan-x: ;
      --tw-pan-y: ;
      --tw-pinch-zoom: ;
      --tw-scroll-snap-strictness: proximity;
      --tw-gradient-from-position: ;
      --tw-gradient-via-position: ;
      --tw-gradient-to-position: ;
      --tw-ordinal: ;
      --tw-slashed-zero: ;
      --tw-numeric-figure: ;
      --tw-numeric-spacing: ;
      --tw-numeric-fraction: ;
      --tw-ring-inset: ;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-color: rgb(59 130 246 / 0.5);
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-ring-shadow: 0 0 #0000;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-colored: 0 0 #0000;
      --tw-blur: ;
      --tw-brightness: ;
      --tw-contrast: ;
      --tw-grayscale: ;
      --tw-hue-rotate: ;
      --tw-invert: ;
      --tw-saturate: ;
      --tw-sepia: ;
      --tw-drop-shadow: ;
      --tw-backdrop-blur: ;
      --tw-backdrop-brightness: ;
      --tw-backdrop-contrast: ;
      --tw-backdrop-grayscale: ;
      --tw-backdrop-hue-rotate: ;
      --tw-backdrop-invert: ;
      --tw-backdrop-opacity: ;
      --tw-backdrop-saturate: ;
      --tw-backdrop-sepia:
    }

    ::backdrop {
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-rotate: 0;
      --tw-skew-x: 0;
      --tw-skew-y: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-pan-x: ;
      --tw-pan-y: ;
      --tw-pinch-zoom: ;
      --tw-scroll-snap-strictness: proximity;
      --tw-gradient-from-position: ;
      --tw-gradient-via-position: ;
      --tw-gradient-to-position: ;
      --tw-ordinal: ;
      --tw-slashed-zero: ;
      --tw-numeric-figure: ;
      --tw-numeric-spacing: ;
      --tw-numeric-fraction: ;
      --tw-ring-inset: ;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-color: rgb(59 130 246 / 0.5);
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-ring-shadow: 0 0 #0000;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-colored: 0 0 #0000;
      --tw-blur: ;
      --tw-brightness: ;
      --tw-contrast: ;
      --tw-grayscale: ;
      --tw-hue-rotate: ;
      --tw-invert: ;
      --tw-saturate: ;
      --tw-sepia: ;
      --tw-drop-shadow: ;
      --tw-backdrop-blur: ;
      --tw-backdrop-brightness: ;
      --tw-backdrop-contrast: ;
      --tw-backdrop-grayscale: ;
      --tw-backdrop-hue-rotate: ;
      --tw-backdrop-invert: ;
      --tw-backdrop-opacity: ;
      --tw-backdrop-saturate: ;
      --tw-backdrop-sepia:
    }

    .absolute {
      position: absolute
    }

    .relative {
      position: relative
    }

    .top-0 {
      top: 0px
    }

    .isolate {
      isolation: isolate
    }

    .-z-10 {
      z-index: -10
    }

    .-z-20 {
      z-index: -20
    }

    .z-10 {
      z-index: 10
    }

    .z-40 {
      z-index: 40
    }

    .my-4 {
      margin-top: 1rem;
      margin-bottom: 1rem
    }

    .mb-6 {
      margin-bottom: 1.5rem
    }

    .ml-3 {
      margin-left: 0.75rem
    }

    .mt-3 {
      margin-top: 0.75rem
    }

    .flex {
      display: flex
    }

    .grid {
      display: grid
    }

    .aspect-square {
      aspect-ratio: 1 / 1
    }

    .h-10 {
      height: 2.5rem
    }

    .min-h-screen {
      min-height: 100vh
    }

    .w-24 {
      width: 6rem
    }

    .w-32 {
      width: 8rem
    }

    .w-full {
      width: 100%
    }

    .max-w-sm {
      max-width: 24rem
    }

    .-translate-y-\[1000px\] {
      --tw-translate-y: -1000px;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .translate-y-\[1000px\] {
      --tw-translate-y: 1000px;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .translate-y-60 {
      --tw-translate-y: 15rem;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .\!-rotate-90 {
      --tw-rotate: -90deg !important;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important
    }

    .grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr))
    }

    .grid-cols-7 {
      grid-template-columns: repeat(7, minmax(0, 1fr))
    }

    .grid-cols-\[1fr_2fr_1fr\] {
      grid-template-columns: 1fr 2fr 1fr
    }

    .items-center {
      align-items: center
    }

    .justify-center {
      justify-content: center
    }

    .justify-between {
      justify-content: space-between
    }

    .gap-2 {
      gap: 0.5rem
    }

    .gap-3 {
      gap: 0.75rem
    }

    .gap-4 {
      gap: 1rem
    }

    .space-y-2> :not([hidden])~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(0.5rem * var(--tw-space-y-reverse))
    }

    .space-y-4> :not([hidden])~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(1rem * var(--tw-space-y-reverse))
    }

    .divide-x> :not([hidden])~ :not([hidden]) {
      --tw-divide-x-reverse: 0;
      border-right-width: calc(1px * var(--tw-divide-x-reverse));
      border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)))
    }

    .overflow-hidden {
      overflow: hidden
    }

    .rounded-full {
      border-radius: 9999px
    }

    .rounded-lg {
      border-radius: 0.5rem
    }

    .rounded-md {
      border-radius: 0.375rem
    }

    .border {
      border-width: 1px
    }

    .border-t {
      border-top-width: 1px
    }

    .border-white\/30 {
      border-color: rgb(255 255 255 / 0.3)
    }

    .\!bg-orange-500 {
      --tw-bg-opacity: 1 !important;
      background-color: rgb(249 115 22 / var(--tw-bg-opacity)) !important
    }

    .bg-orange-500 {
      --tw-bg-opacity: 1;
      background-color: rgb(249 115 22 / var(--tw-bg-opacity))
    }

    .bg-white {
      --tw-bg-opacity: 1;
      background-color: rgb(255 255 255 / var(--tw-bg-opacity))
    }

    .bg-gradient-to-tr {
      background-image: linear-gradient(to top right, var(--tw-gradient-stops))
    }

    .from-amber-200 {
      --tw-gradient-from: #fde68a var(--tw-gradient-from-position);
      --tw-gradient-to: rgb(253 230 138 / 0) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
    }

    .to-amber-100 {
      --tw-gradient-to: #fef3c7 var(--tw-gradient-to-position)
    }

    .object-cover {
      object-fit: cover
    }

    .\!p-8 {
      padding: 2rem !important
    }

    .p-4 {
      padding: 1rem
    }

    .px-16 {
      padding-left: 4rem;
      padding-right: 4rem
    }

    .py-4 {
      padding-top: 1rem;
      padding-bottom: 1rem
    }

    .text-center {
      text-align: center
    }

    .text-lg {
      font-size: 1.125rem;
      line-height: 1.75rem
    }

    .text-sm {
      font-size: 0.875rem;
      line-height: 1.25rem
    }

    .text-xl {
      font-size: 1.25rem;
      line-height: 1.75rem
    }

    .font-semibold {
      font-weight: 600
    }

    .\!text-black {
      --tw-text-opacity: 1 !important;
      color: rgb(0 0 0 / var(--tw-text-opacity)) !important
    }

    .text-blue-400 {
      --tw-text-opacity: 1;
      color: rgb(96 165 250 / var(--tw-text-opacity))
    }

    .text-gray-700 {
      --tw-text-opacity: 1;
      color: rgb(55 65 81 / var(--tw-text-opacity))
    }

    .text-orange-400 {
      --tw-text-opacity: 1;
      color: rgb(251 146 60 / var(--tw-text-opacity))
    }

    .text-white {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity))
    }

    .text-white\/90 {
      color: rgb(255 255 255 / 0.9)
    }

    .\[grid-template-rows\:0fr\] {
      grid-template-rows: 0fr
    }

    .\[grid-template-rows\:auto_0fr\] {
      grid-template-rows: auto 0fr
    }

    .\[transition\:grid-template-rows_500ms_ease-in-out\] {
      transition: grid-template-rows 500ms ease-in-out
    }

    .\[grid-template-rows\:auto_1fr\] {
      grid-template-rows: auto 1fr
    }

    .before\:absolute::before {
      content: var(--tw-content);
      position: absolute
    }

    .before\:inset-0::before {
      content: var(--tw-content);
      inset: 0px
    }

    .before\:-z-10::before {
      content: var(--tw-content);
      z-index: -10
    }

    .before\:-translate-x-full::before {
      content: var(--tw-content);
      --tw-translate-x: -100%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .before\:rounded-full::before {
      content: var(--tw-content);
      border-radius: 9999px
    }

    .before\:bg-green-500::before {
      content: var(--tw-content);
      --tw-bg-opacity: 1;
      background-color: rgb(34 197 94 / var(--tw-bg-opacity))
    }

    .before\:transition-transform::before {
      content: var(--tw-content);
      transition-property: transform;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms
    }

    .before\:duration-700::before {
      content: var(--tw-content);
      transition-duration: 700ms
    }

    .before\:ease-in-out::before {
      content: var(--tw-content);
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1)
    }

    .after\:absolute::after {
      content: var(--tw-content);
      position: absolute
    }

    .after\:inset-0::after {
      content: var(--tw-content);
      inset: 0px
    }

    .after\:-z-10::after {
      content: var(--tw-content);
      z-index: -10
    }

    .after\:translate-x-full::after {
      content: var(--tw-content);
      --tw-translate-x: 100%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .after\:rounded-full::after {
      content: var(--tw-content);
      border-radius: 9999px
    }

    .after\:bg-green-500::after {
      content: var(--tw-content);
      --tw-bg-opacity: 1;
      background-color: rgb(34 197 94 / var(--tw-bg-opacity))
    }

    .after\:transition-transform::after {
      content: var(--tw-content);
      transition-property: transform;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms
    }

    .after\:duration-700::after {
      content: var(--tw-content);
      transition-duration: 700ms
    }

    .after\:ease-in-out::after {
      content: var(--tw-content);
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1)
    }

    .hover\:bg-green-500:hover {
      --tw-bg-opacity: 1;
      background-color: rgb(34 197 94 / var(--tw-bg-opacity))
    }

    .hover\:text-green-500:hover {
      --tw-text-opacity: 1;
      color: rgb(34 197 94 / var(--tw-text-opacity))
    }

    .hover\:text-white:hover {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity))
    }

    .hover\:before\:translate-x-0:hover::before {
      content: var(--tw-content);
      --tw-translate-x: 0px;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .hover\:after\:translate-x-0:hover::after {
      content: var(--tw-content);
      --tw-translate-x: 0px;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .group:hover .group-hover\:bg-white\/30 {
      background-color: rgb(255 255 255 / 0.3)
    }

    .\[\&\>\*\>header\>button\]\:w-full>*>header>button {
      width: 100%
    }

    .\[\&\>\*\]\:grid>* {
      display: grid
    }

    .\[\&\>\*\]\:place-content-center>* {
      place-content: center
    }

    .\[\&\>\*\]\:transition-all>* {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms
    }

    .\[\&\>\*\]\:duration-700>* {
      transition-duration: 700ms
    }

    .\[\&\>section\>header\>button\>span\]\:duration-300>section>header>button>span {
      transition-duration: 300ms
    }

    .\[\&\>section\>header\>button\]\:flex>section>header>button {
      display: flex
    }

    .\[\&\>section\>header\>button\]\:items-center>section>header>button {
      align-items: center
    }

    .\[\&\>section\>header\>button\]\:gap-4>section>header>button {
      gap: 1rem
    }

    .\[\&\>section\]\:rounded-xl>section {
      border-radius: 0.75rem
    }

    .\[\&\>section\]\:bg-black>section {
      --tw-bg-opacity: 1;
      background-color: rgb(0 0 0 / var(--tw-bg-opacity))
    }

    .\[\&\>section\]\:p-5>section {
      padding: 1.25rem
    }

    .\[\&\>section\]\:shadow-lg>section {
      --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
      --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
    }

    .\[\&_\.toggle\]\:ml-auto .toggle {
      margin-left: auto
    }

    .\[\&_\.toggle\]\:grid .toggle {
      display: grid
    }

    .\[\&_\.toggle\]\:h-10 .toggle {
      height: 2.5rem
    }

    .\[\&_\.toggle\]\:w-10 .toggle {
      width: 2.5rem
    }

    .\[\&_\.toggle\]\:rotate-90 .toggle {
      --tw-rotate: 90deg;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .\[\&_\.toggle\]\:place-content-center .toggle {
      place-content: center
    }

    .\[\&_\.toggle\]\:rounded-full .toggle {
      border-radius: 9999px
    }

    .\[\&_input\:checked\+label\]\:bg-orange-500 input:checked+label {
      --tw-bg-opacity: 1;
      background-color: rgb(249 115 22 / var(--tw-bg-opacity))
    }

    .\[\&_input\]\:sr-only input {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border-width: 0
    }

    .\[\&_label\]\:relative label {
      position: relative
    }

    .\[\&_label\]\:isolate label {
      isolation: isolate
    }

    .\[\&_label\]\:grid label {
      display: grid
    }

    .\[\&_label\]\:\!aspect-square label {
      aspect-ratio: 1 / 1 !important
    }

    .\[\&_label\]\:\!h-8 label {
      height: 2rem !important
    }

    .\[\&_label\]\:\!w-8 label {
      width: 2rem !important
    }

    .\[\&_label\]\:cursor-pointer label {
      cursor: pointer
    }

    .\[\&_label\]\:place-content-center label {
      place-content: center
    }

    .\[\&_label\]\:overflow-hidden label {
      overflow: hidden
    }

    .\[\&_label\]\:rounded-full label {
      border-radius: 9999px
    }

    .\[\&_label\]\:px-5 label {
      padding-left: 1.25rem;
      padding-right: 1.25rem
    }

    .\[\&_label\]\:py-1 label {
      padding-top: 0.25rem;
      padding-bottom: 0.25rem
    }

    .\[\&_label\]\:text-white label {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity))
    }

    .\[\&_label\]\:transition-all label {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms
    }

    .\[\&_label\]\:duration-300 label {
      transition-duration: 300ms
    }

    .before\:\[\&_label\]\:absolute label::before {
      content: var(--tw-content);
      position: absolute
    }

    .before\:\[\&_label\]\:inset-full label::before {
      content: var(--tw-content);
      inset: 100%
    }

    .before\:\[\&_label\]\:-z-10 label::before {
      content: var(--tw-content);
      z-index: -10
    }

    .before\:\[\&_label\]\:rounded-full label::before {
      content: var(--tw-content);
      border-radius: 9999px
    }

    .before\:\[\&_label\]\:bg-green-500 label::before {
      content: var(--tw-content);
      --tw-bg-opacity: 1;
      background-color: rgb(34 197 94 / var(--tw-bg-opacity))
    }

    .before\:\[\&_label\]\:transition-all label::before {
      content: var(--tw-content);
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms
    }

    .before\:\[\&_label\]\:duration-300 label::before {
      content: var(--tw-content);
      transition-duration: 300ms
    }

    .before\:\[\&_label\]\:ease-out label::before {
      content: var(--tw-content);
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1)
    }

    .hover\:before\:\[\&_label\]\:inset-0 label:hover::before {
      content: var(--tw-content);
      inset: 0px
    }

    .\[\&_p\>span\]\:-mt-1 p>span {
      margin-top: -0.25rem
    }

    .\[\&_p\>span\]\:text-base p>span {
      font-size: 1rem;
      line-height: 1.5rem
    }

    .\[\&_p\>span\]\:text-orange-400 p>span {
      --tw-text-opacity: 1;
      color: rgb(251 146 60 / var(--tw-text-opacity))
    }

    .\[\&_p\]\:flex p {
      display: flex
    }

    .\[\&_p\]\:items-start p {
      align-items: flex-start
    }

    .\[\&_p\]\:gap-1 p {
      gap: 0.25rem
    }

    .\[\&_p\]\:text-xs p {
      font-size: 0.75rem;
      line-height: 1rem
    }
  </style>
</head>

<body class="bg-gradient-to-tr from-amber-200 to-amber-100 text-gray-700 flex justify-center  min-h-screen p-4">

  <main class="w-full max-w-sm text-white/90 space-y-4 overflow-hidden relative isolate
            [&amp;>section]:bg-black
            [&amp;>section]:p-5
            [&amp;>section]:shadow-lg
            [&amp;>section]:rounded-xl
            [&amp;>*]:transition-all
            [&amp;>*]:duration-700
            [&amp;>*>header>button]:w-full
            [&amp;>section>header>button]:
            [&amp;>section>header>button]:flex
            [&amp;>section>header>button]:items-center
            [&amp;>section>header>button]:gap-4
            [&amp;>section>header>button>span]:transform-all
            [&amp;>section>header>button>span]:duration-300
            [&amp;_.toggle]:ml-auto
            [&amp;_.toggle]:rotate-90
            [&amp;_.toggle]:w-10 
            [&amp;_.toggle]:h-10 
            [&amp;_.toggle]:grid
            [&amp;_.toggle]:place-content-center
            [&amp;_.toggle]:rounded-full  
          
            [&amp;_input]:sr-only
            [&amp;_input:checked+label]:bg-orange-500

            [&amp;_label]:rounded-full
            [&amp;_label]:cursor-pointer
            [&amp;_label]:text-white
            [&amp;_label]:relative
            [&amp;_label]:isolate
            [&amp;_label]:overflow-hidden
            [&amp;_label]:grid
            [&amp;_label]:place-content-center
            [&amp;_label]:transition-all
            [&amp;_label]:duration-300
            before:[&amp;_label]:absolute
            before:[&amp;_label]:inset-full
            before:[&amp;_label]:rounded-full
            before:[&amp;_label]:bg-green-500
            before:[&amp;_label]:transition-all
            before:[&amp;_label]:duration-300
            before:[&amp;_label]:ease-out
            before:[&amp;_label]:-z-10
            hover:before:[&amp;_label]:inset-0
        ">

    <!-- panel - restaurants -->
    <section class="z-40">
      <h1 class="text-xl mb-6">Restaurants</h1>
      <article class="bg-white !text-black text-sm rounded-lg p-4 flex items-center gap-4
                [&amp;_p]:text-xs
                [&amp;_p]:flex
                [&amp;_p]:items-start
                [&amp;_p]:gap-1
                [&amp;_p>span]:text-orange-400
                [&amp;_p>span]:text-base
                [&amp;_p>span]:-mt-1
            ">
        <img src="https://source.unsplash.com/150x150/?salad" class="w-24 aspect-square rounded-md object-cover">
        <div class="space-y-2 w-full">
          <h3 class="font-semibold flex items-center justify-between">
            Clärchens Balhaus
            <div class="flex items-center gap-2 text-blue-400">
              <span class="material-symbols-outlined material-fill-1">star</span>
              <span>4.5</span>
            </div>
          </h3>
          <p>
            <span class="material-symbols-outlined material-fill-1">location_on</span>
            Clärchens Balhaus Augussraßa
            <br>24 10117 Berlin
          </p>
          <p>
            <span class="material-symbols-outlined">schedule</span>
            <strong>Open Now</strong> - Close at 2:00am
          </p>
        </div>
      </article>
    </section>

    <!-- panel - people -->
    <section id="panel-people"
      class="-z-20 relative grid [grid-template-rows:auto_0fr] [transition:grid-template-rows_500ms_ease-in-out] [grid-template-rows:auto_1fr]">
      <header class="group">
        <button type="button" btn-toggle-panel="">
          <span id="people-icon" class="material-symbols-outlined">group</span>
          <p id="people-total">4 people</p>
          <span class="toggle group-hover:bg-white/30 !-rotate-90">❯</span>
        </button>
      </header>
      <div class="overflow-hidden">
        <div id="people-list" class="mt-3 border-t border-white/30 py-4 grid grid-cols-7 gap-3 
                    [&amp;_label]:!w-8
                    [&amp;_label]:!h-8
                    [&amp;_label]:!aspect-square
                ">
          <!-- number buttons loaded here -->
          <input type="radio" name="people" value="1" id="people-1"><label for="people-1">1</label><input type="radio"
            name="people" value="2" id="people-2"><label for="people-2">2</label><input type="radio" name="people"
            value="3" id="people-3"><label for="people-3">3</label><input type="radio" name="people" value="4"
            id="people-4"><label for="people-4">4</label><input type="radio" name="people" value="5"
            id="people-5"><label for="people-5">5</label><input type="radio" name="people" value="6"
            id="people-6"><label for="people-6">6</label><input type="radio" name="people" value="7"
            id="people-7"><label for="people-7">7</label><input type="radio" name="people" value="8"
            id="people-8"><label for="people-8">8</label><input type="radio" name="people" value="9"
            id="people-9"><label for="people-9">9</label><input type="radio" name="people" value="10"
            id="people-10"><label for="people-10">10</label><input type="radio" name="people" value="11"
            id="people-11"><label for="people-11">11</label><input type="radio" name="people" value="12"
            id="people-12"><label for="people-12">12</label><input type="radio" name="people" value="13"
            id="people-13"><label for="people-13">13</label><input type="radio" name="people" value="14"
            id="people-14"><label for="people-14">14</label><input type="radio" name="people" value="15"
            id="people-15"><label for="people-15">15</label><input type="radio" name="people" value="16"
            id="people-16"><label for="people-16">16</label><input type="radio" name="people" value="17"
            id="people-17"><label for="people-17">17</label><input type="radio" name="people" value="18"
            id="people-18"><label for="people-18">18</label><input type="radio" name="people" value="19"
            id="people-19"><label for="people-19">19</label><input type="radio" name="people" value="20"
            id="people-20"><label for="people-20">20</label>
        </div>
        <button type="button" id="btn-more-people"
          class="ml-3 text-orange-400 hover:text-green-500 flex items-center gap-2">
          <span class="material-symbols-outlined">groups</span>
          More than 20 people?
        </button>

        <div id="panel-counter" class="grid [grid-template-rows:0fr] [transition:grid-template-rows_500ms_ease-in-out]">
          <div class="overflow-hidden">
            <div class="my-4 ml-3 grid grid-cols-[1fr_2fr_1fr] divide-x border  w-32 h-10
                            [&amp;>*]:grid
                            [&amp;>*]:place-content-center
                            [&amp;>*]:
                            [&amp;>*]:transition-all
                        ">
              <button type="button" people-counter="less" class="hover:bg-green-500 hover:text-white">-</button>
              <span id="current-num-people">20</span>
              <button type="button" people-counter="more" class=" hover:bg-green-500 hover:text-white">+</button>
            </div>
          </div>
        </div>
      </div>

    </section>

    <!-- panel - time -->
    <section id="panel-time"
      class="-z-20 relative grid [grid-template-rows:auto_0fr] [transition:grid-template-rows_500ms_ease-in-out] [grid-template-rows:auto_1fr]">
      <header class="group">
        <button type="button" btn-toggle-panel="">
          <span class="material-symbols-outlined">schedule</span>
          <p id="time-selected">19:00</p>
          <span class="toggle group-hover:bg-white/30 !-rotate-90">❯</span>
        </button>
      </header>
      <div class="overflow-hidden">
        <div id="time-list" class="mt-3  border-t border-white/30 py-4 grid grid-cols-3 gap-4
                    [&amp;_label]:py-1
                    [&amp;_label]:px-5
                ">
          <!-- number buttons loaded here -->
          <input type="radio" name="time" class="peer" value="19:00" id="time-19-0"><label
            for="time-19-0">19:00</label><input type="radio" name="time" class="peer" value="19:30"
            id="time-19-30"><label for="time-19-30">19:30</label><input type="radio" name="time" class="peer"
            value="20:00" id="time-20-0"><label for="time-20-0">20:00</label><input type="radio" name="time"
            class="peer" value="20:30" id="time-20-30"><label for="time-20-30">20:30</label><input type="radio"
            name="time" class="peer" value="21:00" id="time-21-0"><label for="time-21-0">21:00</label><input
            type="radio" name="time" class="peer" value="21:30" id="time-21-30"><label
            for="time-21-30">21:30</label><input type="radio" name="time" class="peer" value="22:00"
            id="time-22-0"><label for="time-22-0">22:00</label><input type="radio" name="time" class="peer"
            value="22:30" id="time-22-30"><label for="time-22-30">22:30</label><input type="radio" name="time"
            class="peer" value="23:00" id="time-23-0"><label for="time-23-0">23:00</label><input type="radio"
            name="time" class="peer" value="23:30" id="time-23-30"><label for="time-23-30">23:30</label>
        </div>
      </div>
    </section>

    <button type="button" id="btn-confirm"
      class="z-10 rounded-full py-4 px-16 text-sm bg-orange-500 text-white relative isolate overflow-hidden before:absolute before:inset-0 before:rounded-full before:bg-green-500 before:transition-transform before:duration-700 before:ease-in-out before:-z-10 before:-translate-x-full hover:before:translate-x-0 after:absolute after:inset-0 after:rounded-full after:bg-green-500 after:transition-transform after:duration-700 after:ease-in-out after:-z-10 after:translate-x-full hover:after:translate-x-0">Reserve
      a table</button>


    <section id="panel-confirm" class="absolute w-full top-0 -z-10 !bg-orange-500">
      <p class="!p-8 text-lg text-center">
        Your table for <strong id="confirm-people">4</strong> <span id="confirm-txt-people">people</span> has been
        reserved for <strong id="confirm-time">19:00</strong>.
      </p>
    </section>




    <style>
      .material-fill-1 {
        font-variation-settings:
          'FILL' 1,
          'wght' 400,
          'GRAD' 0,
          'opsz' 48
      }
    </style>
    <script type="module">
      const peopleList = document.querySelector("#people-list");
      const peopleTotal = document.querySelector("#people-total");
      const peopleIcon = document.querySelector("#people-icon");

      const btnParty = document.querySelector("#btn-more-people");
      const timeList = document.querySelector("#time-list");
      const timeSelected = document.querySelector("#time-selected");
      const panelCounter = document.querySelector("#panel-counter");
      const panelPeople = document.querySelector("#panel-people");
      const panelTime = document.querySelector("#panel-time");
      const panelConfirm = document.querySelector("#panel-confirm");
      const btnConfirm = document.querySelector("#btn-confirm");

      const confirmPeople = document.querySelector("#confirm-people");
      const confirmTime = document.querySelector("#confirm-time");
      const confirmTxtPeople = document.querySelector("#confirm-txt-people");

      // marcinmalecki preview hack
      // NOTE - This JS is not relevant to the submission, it is just to ensure that the preview thumnail looks ok.
      if (navigator.userAgent.includes("Headless")) {
        document.body.classList.add("mt-32");
        // btnConfirm.classList.remove("-translate-y-[1000px]");
        // panelTime.classList.remove("-translate-y-[1000px]");
        //panelPeople.classList.remove("-translate-y-[1000px]");
      }



      // toggle panels
      document.querySelectorAll("[btn-toggle-panel]").forEach(btn => {
        btn.addEventListener("click", () => {
          btn.closest("section").classList.toggle("[grid-template-rows:auto_1fr]");
          btn.querySelector(".toggle").classList.toggle("!-rotate-90");
        })
      })

      // add numbers
      let selectedNumPeople = '';
      let selectedTime = '';

      for (let i = 1; i <= 20; i++) {
        const radioButton = document.createElement('input');
        radioButton.type = 'radio';
        radioButton.name = 'people';
        radioButton.value = i;
        radioButton.id = `people-${i}`;
        // Create a label element
        const label = document.createElement('label');
        label.innerText = i;
        label.htmlFor = `people-${i}`;

        // Append the radio button and label to the container
        peopleList.appendChild(radioButton);
        peopleList.appendChild(label);

        // Add a click event listener to the button (optional)
        radioButton.addEventListener('change', () => {
          selectedNumPeople = i;
          updatePeopleCounter()
          panelCounter.classList.remove("[grid-template-rows:1fr]")
        });

        // Check the first radio button
        if (i === 4) {
          radioButton.checked = true;
          selectedNumPeople = i;
          updatePeopleCounter()
        }
      }

      // function - update people counter display
      function updatePeopleCounter() {
        peopleTotal.innerText = `${selectedNumPeople} ${txtPeople()}`;
      }

      // event - toggle panel manual counter
      btnParty.addEventListener("click", () => {
        panelCounter.classList.toggle("[grid-template-rows:1fr]")
      })

      let currentValue = 20;
      // manual people counter
      document.querySelectorAll("[people-counter]").forEach(btn => {
        btn.addEventListener("pointerdown", () => {
          const direction = btn.getAttribute("people-counter");
          if (direction === "more") {
            currentValue++;
          } else {
            currentValue--;
            if (currentValue < 20) currentValue = 20;
          }
          selectedNumPeople = currentValue;
          document.querySelector("#current-num-people").innerText = selectedNumPeople

          // clear radion buttos (thanks marcinmalecki for pointing that out)
          peopleList.querySelectorAll("input").forEach(r => r.checked = false)

          updatePeopleCounter()
        })
      })

      function txtPeople() {
        return selectedNumPeople === 1 ? "person" : "people";
      }

      // Loop to generate radio buttons and labels for each time interval
      let currentHour = 19; // start hour
      let currentMinute = 0;

      while (!(currentHour === 0 && currentMinute === 0)) {

        const radioButton = document.createElement('input');
        radioButton.type = 'radio';
        radioButton.name = 'time';
        radioButton.className = 'peer';
        radioButton.value = `${currentHour}:${currentMinute === 0 ? '00' : currentMinute}`;
        radioButton.id = `time-${currentHour}-${currentMinute}`;

        const label = document.createElement('label');
        label.innerText = `${currentHour}:${currentMinute === 0 ? '00' : currentMinute}`;
        label.htmlFor = `time-${currentHour}-${currentMinute}`;
        timeList.appendChild(radioButton);
        timeList.appendChild(label);

        // radio event listener
        radioButton.addEventListener('change', () => {
          selectedTime = radioButton.value;
          updateTimeDisplay()
        });

        // Check the first radio button
        if (currentHour === 19 && currentMinute === 0) {
          radioButton.checked = true;
          selectedTime = radioButton.value;
          updateTimeDisplay()
        }

        // Increment the time by 30 minutes
        currentMinute += 30;
        if (currentMinute === 60) {
          currentMinute = 0;
          currentHour = (currentHour + 1) % 24; // Ensure the hour stays within 0-23
        }
      }


      // function - update display time
      function updateTimeDisplay() {
        timeSelected.innerText = selectedTime;
      }

      btnConfirm.addEventListener("click", () => {
        // update selected numbers
        confirmPeople.innerText = selectedNumPeople;
        confirmTime.innerText = selectedTime;
        confirmTxtPeople.innerText = txtPeople();

        // hide panels
        panelPeople.classList.add("-translate-y-[1000px]");
        panelTime.classList.add("-translate-y-[1000px]");
        btnConfirm.classList.add("translate-y-[1000px]");
        setTimeout(() => panelConfirm.classList.add("translate-y-60"), 800)

        // reveal again after delay
        setTimeout(() => {
          panelConfirm.classList.remove("translate-y-60")
          setTimeout(() => {
            btnConfirm.classList.remove("translate-y-[1000px]");
            panelTime.classList.remove("-translate-y-[1000px]");
            panelPeople.classList.remove("-translate-y-[1000px]")
          }, 400);
        }, 6000);
      })

      // initial panel reveal
      /*
      setTimeout(() => {
          btnConfirm.classList.remove("-translate-y-[1000px]")
          setTimeout(() => panelTime.classList.remove("-translate-y-[1000px]"), 400)
          setTimeout(() => panelPeople.classList.remove("-translate-y-[1000px]"), 800)
      }, 500);
      */
    </script>
  </main>
</body>

</html>