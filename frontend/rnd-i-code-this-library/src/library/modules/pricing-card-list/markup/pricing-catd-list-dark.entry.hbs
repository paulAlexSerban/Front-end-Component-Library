<html>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="">
  <link
    href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&amp;family=Merriweather:wght@700&amp;display=swap"
    rel="stylesheet">
</head>

<body>
  <section>
    <ul class="pricing_list" data-pricing-list="">

    </ul>
  </section>

  <style>
    :root {
      --bg-body: linear-gradient(to right,
          rgba(243, 237, 249, 1),
          rgba(222, 224, 239, 1));
      --bg-pricing-item: rgba(255, 255, 255, 1);
      --clr-font: rgba(73, 76, 83, 1);
      --font-main: 'Inter', sans-serif;
      --font-headings: 'Merriweather', serif;
      --transition-speed: .3s;
    }

    *,
    *::before,
    *::after {
      box-sizing: border-box;
      font-family: var(--font-main);
      -webkit-tap-highlight-color: transparent;
    }

    body {
      margin: 0;
      min-height: 100dvh;
      background: var(--bg-body);
      display: grid;
      place-items: center;
      overflow-x: hidden;
    }

    ul {
      margin: 0;
      padding: 0;
      list-style: none;
    }

    section {
      margin: 35px 0;
      display: flex;
    }

    .pricing_list {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: 70px;
    }

    .pricing_item {
      width: 270px;
      padding: 45px 35px 65px;
      background: var(--bg-pricing-item);
      color: var(--clr-font);
      font-size: 14px;
      border-radius: 14px;
      position: relative;
    }

    .pricing_item::before {
      content: '';
      background: var(--clr-accent);
      border-radius: 20px;
      opacity: .1;
      position: absolute;
      inset: -12px;
      z-index: -1;
    }

    .pricing_item::after {
      content: '';
      background: var(--clr-accent);
      opacity: .1;
      border-radius: inherit;
      position: absolute;
      z-index: -1;
      scale: 0;
      transition: scale var(--transition-speed);
    }

    .pricing_item:nth-child(even)::after {
      width: 140%;
      height: 320px;
      bottom: -60px;
      left: 55px;
    }

    .pricing_item:nth-child(odd)::after {
      width: 130%;
      height: 100%;
      top: -150px;
      left: 100px;
    }

    .pricing_item:hover::after {
      scale: 1;
    }

    .pricing_item h3 {
      margin: 0 0 5px;
      color: var(--clr-accent);
      font-size: 17px;
      font-family: var(--font-headings);
    }

    .pricing_item_benefits {
      margin: 50px 0;
      font-weight: 500;
    }

    .pricing_item_benefits li {
      padding: 10px 0;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .pricing_item_benefits li::before {
      content: url('data:image/svg+xml,<svg width="28" viewBox="-6.72 -6.72 37.44 37.44" fill="none" xmlns="http://www.w3.org/2000/svg"><g stroke-width="0"><rect x="-6.72" y="-6.72" width="37.44" height="37.44" rx="18.72" fill="%23f4faed" strokewidth="0"></rect></g><g stroke-linecap="round" stroke-linejoin="round"></g><g><path d="M20 7L9.00004 18L3.99994 13" stroke="%2382975f" stroke-width="2.4" stroke-linecap="round" stroke-linejoin="round"></path></g></svg>');
    }

    .pricing_item a {
      display: block;
      width: 100%;
      padding: 12px 0;
      color: var(--clr-accent);
      text-align: center;
      text-decoration: none;
      font-weight: 700;
      border: 1px solid var(--clr-accent);
      outline: none;
      border-radius: 10px;
      transition: background var(--transition-speed), color var(--transition-speed), border-color var(--transition-speed);
      position: relative;
      overflow: hidden;
    }

    .pricing_item a:hover,
    .pricing_item a:focus-visible {
      background: var(--clr-accent);
      color: rgba(255, 255, 255, 1);
      border-color: transparent;
    }

    .pricing_item a::before {
      content: '';
      background: rgba(255, 255, 255, .5);
      color: var(--clr-accent);
      clip-path: polygon(-40% 0,
          -30% 0,
          -20% 50%,
          -30% 100%,
          -40% 100%,
          -30% 50%);
      position: absolute;
      inset: 0;
    }

    .pricing_item a:hover::before,
    .pricing_item a:focus-visible::before {
      animation: clip 1s infinite linear;
    }

    @keyframes clip {
      100% {
        clip-path: polygon(140% 0,
            150% 0,
            160% 50%,
            150% 100%,
            140% 100%,
            150% 50%);
      }
    }

    @media(prefers-reduced-motion) {
      :root {
        --transition-speed: 0s;
      }

      .pricing_item a::before {
        display: none;
      }
    }

    @media(prefers-color-scheme: dark) {
      :root {
        --bg-body: linear-gradient(to right,
            rgba(36, 35, 38, 1),
            rgba(20, 41, 49, 1));
        --bg-pricing-item: rgba(16, 15, 15, 1);
        --clr-font: rgba(240, 240, 240, 1);
      }
    }
  </style>
  <script type="module">
    const PRICING_ITEMS = [
      {
        type: "Starter",
        price: "Free",
        benefits: [
          "Unlimited files",
          "Unlimited editors",
          "Unlimited cloud storage"
        ],
        clrAccent: "rgba(117, 110, 254, 1)"
      },
      {
        type: "Professional",
        price: 12,
        benefits: [
          "Unlimited projects",
          "Private projects",
          "Team libraries"
        ],
        clrAccent: "rgba(196, 88, 155, 1)"
      }
    ];

    const pricingList = document.querySelector('[data-pricing-list]');

    const generatePricingItems = () => {
      PRICING_ITEMS.forEach(pricingItem => {
        const { type, price, benefits, clrAccent } = pricingItem;

        const pricingItemEl = document.createElement('li');
        pricingItemEl.classList.add('pricing_item');
        pricingItemEl.style.setProperty('--clr-accent', clrAccent);

        const pricingItemHeadingEl = document.createElement('h3');
        pricingItemHeadingEl.textContent = type;

        const pricingItemPriceEl = document.createElement('span');
        pricingItemPriceEl.classList.add('pricing_item_price');

        if (price === "Free") {
          pricingItemPriceEl.innerHTML = `<strong>Free</strong>`;
        } else {
          pricingItemPriceEl.innerHTML = `<strong>\$${price}</strong> per member`;
        }

        const pricingItemBenefitsEl = document.createElement('ul');
        pricingItemBenefitsEl.classList.add('pricing_item_benefits');

        benefits.forEach(benefit => {
          pricingItemBenefitsEl.innerHTML += `<li>${benefit}</li>`;
        });

        const pricingItemLinkEl = document.createElement('a');
        pricingItemLinkEl.href = 'javascript:void(0)';
        pricingItemLinkEl.innerHTML += `Choose ${type}`;

        pricingItemEl.appendChild(pricingItemHeadingEl);
        pricingItemEl.appendChild(pricingItemPriceEl);
        pricingItemEl.appendChild(pricingItemBenefitsEl);
        pricingItemEl.appendChild(pricingItemLinkEl);

        pricingList.appendChild(pricingItemEl);
      });
    }

    window.addEventListener('DOMContentLoaded', generatePricingItems);
  </script>
</body>

</html>