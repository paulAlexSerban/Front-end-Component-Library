<html>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="">
  <link
    href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&amp;family=Lisu+Bosa:wght@400;500&amp;display=swap"
    rel="stylesheet">
</head>

<!-- Change code below this line -->

<body>
  <main class="">
    <div class="inner-main">
      <h2 class="">Your messages</h2>
      <button class="compose-btn">
        <p>Compose</p>
        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-pencil" viewBox="0 0 24 24"
          stroke-width="1.5" stroke="#2c3e50" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
          <path d="M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4"></path>
          <path d="M13.5 6.5l4 4"></path>
        </svg>
      </button>
      <ul class="messages-list">
        <li class="message-item">
          <div class="message-image">
            <img src="https://i.pravatar.cc/400?img=18" alt="Rafel Jay">
            <div class="notification-dot"></div>
          </div>
          <div class="message-info">
            <h3>Rafel Jay</h3>
            <p>Hi there, how are you?</p>
          </div>
          <span>4 days ago</span>
        </li>
        <li class="message-item">
          <div class="message-image">
            <img src="https://i.pravatar.cc/300?img=57" alt="Frank Johnson">
            <div class="notification-dot notification-accent"></div>
          </div>
          <div class="message-info">
            <h3>Frank Johnson</h3>
            <p>How was the trip?</p>
          </div>
          <span>6 days ago</span>
        </li>
        <li class="message-item">
          <div class="message-image">
            <img src="https://i.pravatar.cc/400?img=44" alt="Ashley Pierce">
            <div class="notification-dot notification-inactive"></div>
          </div>
          <div class="message-info">
            <h3>Ashley Pierce</h3>
            <p>I hope you are well</p>
          </div>
          <span>Mar 10, 2022</span>
        </li>
        <li class="message-item">
          <div class="message-image">
            <img src="https://i.pravatar.cc/400?img=1" alt="Nancy Meyer">
            <div class="notification-dot"></div>
          </div>
          <div class="message-info">
            <h3>Nancy Meyer</h3>
            <p>Thank you for your answering</p>
          </div>
          <span>Feb 3, 2022</span>
        </li>

      </ul>
    </div>

  </main>

  <style>
    /* Add CSS here */

    :root {
      --clr-primario: hsl(238, 35%, 19%);
      --clr-secundario: white;
      --clr-accent: hsl(22, 71%, 56%);
      --clr-accent-2: hsl(0, 0%, 82%);
      --clr-accent-3: hsl(207, 100%, 76%);
      --clr-bg: hsl(222, 100%, 98%);
      --clr-bg-light: hsla(23, 97%, 50%, .5);
      --clr-bg-card: hsl(0, 0%, 100%);
      --clr-bg-pseudo-left: hsl(175, 71%, 56%);
      --clr-bg-pseudo-right: hsl(159, 71%, 56%);
      --clr-box-shadow: hsla(238, 35%, 19%, .4);
      --clr-box-shadow-input: hsl(240, 43%, 93%);
      --ff-primaria: 'Poppins', sans-serif;
      --ff-secundaria: 'Lisu Bosa', serif;
      --fs-primaria: 1rem;
      transition: all .250s ease-in-out;
    }

    /* Estilos Reset */
    *,
    *:before,
    *:after {
      margin: 0;
      padding: 0;
      font-family: var(--ff-primaria);
      box-sizing: border-box;
      scroll-behavior: smooth;
      -webkit-tap-highlight-color: transparent;
    }

    img,
    svg {
      display: block;
      max-width: 100%;
    }

    body {
      line-height: 1.5;
    }

    a:link,
    a:visited,
    a:hover,
    a:active {
      color: inherit;
      font: inherit;
      text-decoration: none;
      cursor: pointer;
    }


    button,
    input {
      position: relative;
      appearance: none;
      background-color: transparent;
      color: inherit;
      font: inherit;
      border: none;
      cursor: pointer;
      z-index: 1;
    }

    ::-webkit-scrollbar {
      height: 8px;
      width: 8px;
      cursor: pointer;
    }

    ::-webkit-scrollbar-track {
      background: transparent !important;
    }

    ::-webkit-scrollbar-thumb {
      border-radius: 10px;
      background: var(--clr-accent);
    }

    ::-webkit-scrollbar-track-piece {
      background-color: transparent;
    }

    .sr-only:not(:focus):not(:active) {
      clip: rect(0 0 0 0);
      clip-path: inset(50%);
      height: 1px;
      overflow: hidden;
      position: absolute;
      white-space: nowrap;
      width: 1px;
    }

    [hidden] {
      display: none;
    }

    /* utility classes */

    .opacity-0 {
      opacity: 0;
    }

    .visibility-0 {
      visibility: hidden;
    }

    .pointer-events-none {
      pointer-events: none;
    }

    .translate-x-100 {
      transform: translateX(100%);
    }

    .-translate-x-100 {
      transform: translateX(-100%);
    }

    .translate-x-100vw {
      transform: translateX(100vw);
    }

    .-translate-x-100vw {
      transform: translateX(-100vw);
    }

    .translate-y-100vh {
      transform: translateY(100vh);
    }

    .-translate-y-100vh {
      transform: translateY(-100vh);
    }

    .translate-y-100 {
      transform: translateY(100%);
    }

    .-translate-y-100 {
      transform: translateY(-100%);
    }

    .scale-0 {
      scale: 0;
    }

    .scale-y-0 {
      transform: scaleY(0);
    }

    .-rotate-180 {
      transform: rotate(-180deg);
    }

    .rotate-180 {
      transform: rotate(180deg);
    }

    .invert-x {
      transform: scaleX(-1);
    }

    .invert-y {
      transform: scaleY(-1);
    }

    .translate-x-vw {
      transform: translateX(100vw);
    }

    .-translate-x-vw {
      transform: translateX(-100vw);
    }

    /* Estilos principales */
    body {
      display: grid;
      place-content: center center;
      gap: 1rem;
      min-height: 100dvh;
      background-color: var(--clr-bg);
      color: var(--clr-primario);
      font-size: var(--fs-primaria);
      font-weight: 400;
      user-select: none;
      --op-pseudo: 0;
    }

    body:after {
      position: fixed;
      content: '';
      inset: 0rem;
      background: var(--clr-bg-pseudo-left);
      background: linear-gradient(135deg, var(--clr-bg-pseudo-left), var(--clr-bg-pseudo-right));
      background-size: cover;
      background-repeat: no-repeat;
      background-position: 50% 50%;
      opacity: var(--op-pseudo);
      transition: all .400s ease-in-out;
      z-index: -1;
    }

    body:has(main:hover) {
      --op-pseudo: 1;
    }

    main {
      position: relative;
      display: flex;
      width: clamp(20rem, 100vw, 22rem);
      padding: 2rem;
      background-color: var(--clr-bg-card);
      transition: all .400s ease-in-out;
      border-radius: 1.2rem;
      box-shadow: 0px 10px 20px var(--clr-box-shadow);
      z-index: 1;
    }

    main:before {
      position: absolute;
      content: '';
      top: -3rem;
      left: -2.5rem;
      width: 100%;
      height: 80%;
      background: var(--clr-bg-pseudo-left);
      background: linear-gradient(45deg, var(--clr-bg-pseudo-left), var(--clr-bg-pseudo-right));
      border-radius: 1.2rem;
      opacity: var(--op-main-pseudo);
      filter: grayscale(0%);
      transition: all .400s ease-in-out;
      z-index: -1;
    }

    main:after {
      position: absolute;
      content: '';
      inset: 0;
      background-color: var(--clr-bg-card);
      border-radius: 1.2rem;
      z-index: -1;
    }

    main:hover:before {
      filter: hue-rotate(45deg);
      opacity: .5;
    }

    .inner-main {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      overflow: hidden;
    }

    .compose-btn {
      position: relative;
      display: flex;
      justify-content: center;
      align-items: center;
      gap: .4rem;
      width: 100%;
      margin-inline: 0rem;
      padding-block: .8rem;
      background: var(--clr-primario);
      color: var(--clr-secundario);
      font-size: .8rem;
      font-weight: 500;
      border-radius: .5rem;
      transition: all .400s ease-in-out;
      z-index: 1;
    }

    .compose-btn svg {
      width: 1.3rem;
      stroke: var(--clr-secundario);
    }

    .compose-btn:before,
    .compose-btn:after {
      position: absolute;
      content: '';
      inset: 0rem;
      width: 100%;
      height: 100%;
      background: var(--clr-primario);
      border-radius: .5rem;
      transition: all .400s ease-in-out;
      z-index: -1;
      opacity: .6;
    }

    .compose-btn:after {
      background-color: var(--clr-bg-pseudo-right);
    }


    .compose-btn:hover:before {
      animation: rotateComposeBefore 3s infinite linear forwards;
    }

    .compose-btn:hover:after {
      animation: rotateComposeAfter 3s .500s infinite linear forwards;
    }

    @keyframes rotateComposeAfter {

      0%,
      100% {
        transform: translateY(0rem);
        opacity: .6;
      }

      50% {
        transform: translateY(-.5rem);
        opacity: .4;
      }
    }

    @keyframes rotateComposeBefore {

      0%,
      100% {
        transform: translateY(0rem);
        opacity: .6;
      }

      50% {
        transform: translateY(.5rem);
        opacity: .4;
      }
    }

    h2 {
      font-family: var(--ff-secundaria);
      font-size: 1.3rem;
      font-weight: 800;
      line-height: 1.4;
      transition: all .400s ease-in-out;
    }

    .messages-list {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      width: 100%;
      list-style: none;
    }

    .message-item {
      position: relative;
      display: flex;
      align-items: center;
      gap: .5rem;
      margin: .5rem;
      transition: all .400s ease-in-out;
      z-index: 1;
    }

    .message-item:before,
    .message-item:after {
      position: absolute;
      content: '';
      inset: 0rem;
      width: 4rem;
      height: 100%;
      background: var(--clr-bg-pseudo-left);
      /*   background: linear-gradient(45deg, var(--clr-bg-pseudo-left), var(--clr-bg-pseudo-right));
   */
      border-radius: 1.2rem;
      transition: all .400s ease-in-out;
      z-index: -1;
      opacity: 1;
    }

    .message-item:after {
      background-color: var(--clr-bg-pseudo-right);
    }

    .message-item:hover:before {
      animation: rotatePseudo 5s infinite linear forwards;
    }

    .message-item:hover:after {
      animation: rotatePseudo 5s 2.5s infinite linear forwards;
    }

    @keyframes rotatePseudo {

      0%,
      100% {
        transform: rotate(0deg);
      }

      50% {
        transform: rotate(180deg);
      }
    }


    .message-image {
      position: relative;
      flex-shrink: 0;
      width: 4rem;
      aspect-ratio: 1;
      box-shadow: 0px 5px 10px var(--clr-box-shadow);
      border-radius: 50%;
    }

    .message-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
      border-radius: 50%;
      overflow: hidden;
    }

    .notification-dot {
      position: absolute;
      top: 1.5rem;
      left: -.4rem;
      width: 1rem;
      aspect-ratio: 1;
      background-color: var(--clr-bg-pseudo-right);
      border: .15rem solid var(--clr-secundario);
      border-radius: 50%;
    }

    .notification-accent {
      background-color: var(--clr-accent);
    }

    .notification-inactive {
      background-color: var(--clr-accent-2);
    }

    .message-info {
      position: relative;
      flex-shrink: 0;
      display: flex;
      flex-direction: column;
      padding: .5rem;
      transition: all .400s ease-in-out;
    }

    .message-info:hover {
      color: var(--clr-secundario);
    }

    .message-info:before,
    .message-info:after {
      position: absolute;
      content: '';
      inset: 0rem;
      width: 0%;
      height: 100%;
      background: var(--clr-bg-pseudo-left);
      /*   background: linear-gradient(45deg, var(--clr-bg-pseudo-left), var(--clr-bg-pseudo-right));
   */
      border-radius: 1.2rem;
      transition: all .400s ease-in-out;
      z-index: -1;
      opacity: 1;
    }

    .message-info:after {
      background-color: var(--clr-bg-pseudo-right);
    }

    .message-item:hover .message-info:before {
      width: 100%;
      animation: rotateInfoBefore 3s infinite linear forwards;
    }

    .message-item:hover .message-info:after {
      width: 100%;
      animation: rotateInfoAfter 3s 1.5s infinite linear forwards;
    }

    @keyframes rotateInfoAfter {

      0%,
      100% {
        transform: rotate(0deg);
        opacity: 1;
      }

      50% {
        transform: rotate(15deg);
        opacity: .5;
      }
    }

    @keyframes rotateInfoBefore {

      0%,
      100% {
        transform: rotate(0deg);
        opacity: 1;
      }

      50% {
        transform: rotate(-15deg);
        opacity: .5;
      }
    }

    h3 {
      font-size: .9rem;
    }

    .message-info>p {
      font-size: .8rem;
    }

    .message-item>span {
      position: absolute;
      top: -.5rem;
      right: -.5rem;
      font-size: .7rem;
      font-weight: 500;
      opacity: .5;
    }

    .help-btn {
      background: var(--clr-bg-pseudo-left);
      background: linear-gradient(135deg, var(--clr-bg-pseudo-left), var(--clr-bg-pseudo-right));
      opacity: 0;
      visibility: hidden;
      transition: all .250s ease-in-out;
    }

    .help-btn.help--active {
      opacity: 1;
      visibility: visible;
    }

    @media (max-width: 40rem) {
      main {
        width: 20rem;
        padding-block: 2rem;
        padding-inline: 1rem;
      }

    }
  </style>
  <script type="module">
    // Add JavaScript code here

    const links = document.querySelectorAll('a');
    const mainContainer = document.querySelector('main');
    const composeBtn = document.querySelector('.compose-btn');
    const h2Elem = document.querySelector('h2');
    const messageItems = document.querySelectorAll('.message-item');

    // Prevent links default behaviour
    const overrideLinks = () => {
      links.forEach((link) => {
        link.addEventListener('click', (e) => {
          e.preventDefault();
        });
      });
    }

    // Compose button functionality
    const composeButton = () => {

      // Handles close modal with Close Button
      composeBtn.addEventListener('click', (e) => {
        e.preventDefault();
        alert("Hi, i'm a Sunday button, i mean, i do absolutely nothing");
      });
    }

    //The Marcin Malecki's way for thumbnail perfection
    if (navigator.userAgent.includes("Headless")) {
      mainContainer.style.transitionDuration = '0s';
      mainContainer.classList.remove('translate-y-100vh');
      mainContainer.classList.remove('scale-0');
      mainContainer.classList.remove('opacity-0');
      composeBtn.style.transitionDuration = '0s';
      composeBtn.classList.remove('-translate-y-100');
      composeBtn.classList.remove('scale-0');
      composeBtn.classList.remove('opacity-0');
      h2Elem.style.transitionDuration = '0s';
      h2Elem.classList.remove('-translate-x-100');
      h2Elem.classList.remove('scale-0');
      h2Elem.classList.remove('opacity-0');
      messageItems.forEach((messageItem) => {
        messageItem.style.transitionDuration = '0s';
        messageItem.classList.remove('translate-x-100');
        messageItem.classList.remove('scale-0');
        messageItem.classList.remove('opacity-0');
      });
    }

    window.addEventListener('DOMContentLoaded', () => {
      overrideLinks();
      composeButton();
      setTimeout(() => {
        mainContainer.classList.remove('translate-y-100vh');
        mainContainer.classList.remove('scale-0');
        mainContainer.classList.remove('opacity-0');
      }, 1000);
      setTimeout(() => {
        composeBtn.classList.remove('-translate-y-100');
        composeBtn.classList.remove('scale-0');
        composeBtn.classList.remove('opacity-0');
      }, 1600);
      setTimeout(() => {
        h2Elem.classList.remove('-translate-x-100');
        h2Elem.classList.remove('scale-0');
        h2Elem.classList.remove('opacity-0');
      }, 2100);

      setTimeout(() => {
        messageItems.forEach((messageItem, i) => {
          setTimeout(() => {
            messageItem.classList.remove('translate-x-100');
            messageItem.classList.remove('scale-0');
            messageItem.classList.remove('opacity-0');

          }, 150 * i);
        });
      }, 2600);


    });
  </script>
</body>

</html>