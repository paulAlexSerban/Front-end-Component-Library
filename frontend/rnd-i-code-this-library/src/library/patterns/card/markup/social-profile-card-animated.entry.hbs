<html>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0">
  <style>
    /* ! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com */
    *,
    ::after,
    ::before {
      box-sizing: border-box;
      border-width: 0;
      border-style: solid;
      border-color: #e5e7eb
    }

    ::after,
    ::before {
      --tw-content: ''
    }

    :host,
    html {
      line-height: 1.5;
      -webkit-text-size-adjust: 100%;
      -moz-tab-size: 4;
      tab-size: 4;
      font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
      font-feature-settings: normal;
      font-variation-settings: normal;
      -webkit-tap-highlight-color: transparent
    }

    body {
      margin: 0;
      line-height: inherit
    }

    hr {
      height: 0;
      color: inherit;
      border-top-width: 1px
    }

    abbr:where([title]) {
      -webkit-text-decoration: underline dotted;
      text-decoration: underline dotted
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-size: inherit;
      font-weight: inherit
    }

    a {
      color: inherit;
      text-decoration: inherit
    }

    b,
    strong {
      font-weight: bolder
    }

    code,
    kbd,
    pre,
    samp {
      font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
      font-feature-settings: normal;
      font-variation-settings: normal;
      font-size: 1em
    }

    small {
      font-size: 80%
    }

    sub,
    sup {
      font-size: 75%;
      line-height: 0;
      position: relative;
      vertical-align: baseline
    }

    sub {
      bottom: -.25em
    }

    sup {
      top: -.5em
    }

    table {
      text-indent: 0;
      border-color: inherit;
      border-collapse: collapse
    }

    button,
    input,
    optgroup,
    select,
    textarea {
      font-family: inherit;
      font-feature-settings: inherit;
      font-variation-settings: inherit;
      font-size: 100%;
      font-weight: inherit;
      line-height: inherit;
      color: inherit;
      margin: 0;
      padding: 0
    }

    button,
    select {
      text-transform: none
    }

    [type=button],
    [type=reset],
    [type=submit],
    button {
      -webkit-appearance: button;
      background-color: transparent;
      background-image: none
    }

    :-moz-focusring {
      outline: auto
    }

    :-moz-ui-invalid {
      box-shadow: none
    }

    progress {
      vertical-align: baseline
    }

    ::-webkit-inner-spin-button,
    ::-webkit-outer-spin-button {
      height: auto
    }

    [type=search] {
      -webkit-appearance: textfield;
      outline-offset: -2px
    }

    ::-webkit-search-decoration {
      -webkit-appearance: none
    }

    ::-webkit-file-upload-button {
      -webkit-appearance: button;
      font: inherit
    }

    summary {
      display: list-item
    }

    blockquote,
    dd,
    dl,
    figure,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    hr,
    p,
    pre {
      margin: 0
    }

    fieldset {
      margin: 0;
      padding: 0
    }

    legend {
      padding: 0
    }

    menu,
    ol,
    ul {
      list-style: none;
      margin: 0;
      padding: 0
    }

    dialog {
      padding: 0
    }

    textarea {
      resize: vertical
    }

    input::placeholder,
    textarea::placeholder {
      opacity: 1;
      color: #9ca3af
    }

    [role=button],
    button {
      cursor: pointer
    }

    :disabled {
      cursor: default
    }

    audio,
    canvas,
    embed,
    iframe,
    img,
    object,
    svg,
    video {
      display: block;
      vertical-align: middle
    }

    img,
    video {
      max-width: 100%;
      height: auto
    }

    [hidden] {
      display: none
    }

    *,
    ::before,
    ::after {
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-rotate: 0;
      --tw-skew-x: 0;
      --tw-skew-y: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-pan-x: ;
      --tw-pan-y: ;
      --tw-pinch-zoom: ;
      --tw-scroll-snap-strictness: proximity;
      --tw-gradient-from-position: ;
      --tw-gradient-via-position: ;
      --tw-gradient-to-position: ;
      --tw-ordinal: ;
      --tw-slashed-zero: ;
      --tw-numeric-figure: ;
      --tw-numeric-spacing: ;
      --tw-numeric-fraction: ;
      --tw-ring-inset: ;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-color: rgb(59 130 246 / 0.5);
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-ring-shadow: 0 0 #0000;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-colored: 0 0 #0000;
      --tw-blur: ;
      --tw-brightness: ;
      --tw-contrast: ;
      --tw-grayscale: ;
      --tw-hue-rotate: ;
      --tw-invert: ;
      --tw-saturate: ;
      --tw-sepia: ;
      --tw-drop-shadow: ;
      --tw-backdrop-blur: ;
      --tw-backdrop-brightness: ;
      --tw-backdrop-contrast: ;
      --tw-backdrop-grayscale: ;
      --tw-backdrop-hue-rotate: ;
      --tw-backdrop-invert: ;
      --tw-backdrop-opacity: ;
      --tw-backdrop-saturate: ;
      --tw-backdrop-sepia:
    }

    ::backdrop {
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-rotate: 0;
      --tw-skew-x: 0;
      --tw-skew-y: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-pan-x: ;
      --tw-pan-y: ;
      --tw-pinch-zoom: ;
      --tw-scroll-snap-strictness: proximity;
      --tw-gradient-from-position: ;
      --tw-gradient-via-position: ;
      --tw-gradient-to-position: ;
      --tw-ordinal: ;
      --tw-slashed-zero: ;
      --tw-numeric-figure: ;
      --tw-numeric-spacing: ;
      --tw-numeric-fraction: ;
      --tw-ring-inset: ;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-color: rgb(59 130 246 / 0.5);
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-ring-shadow: 0 0 #0000;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-colored: 0 0 #0000;
      --tw-blur: ;
      --tw-brightness: ;
      --tw-contrast: ;
      --tw-grayscale: ;
      --tw-hue-rotate: ;
      --tw-invert: ;
      --tw-saturate: ;
      --tw-sepia: ;
      --tw-drop-shadow: ;
      --tw-backdrop-blur: ;
      --tw-backdrop-brightness: ;
      --tw-backdrop-contrast: ;
      --tw-backdrop-grayscale: ;
      --tw-backdrop-hue-rotate: ;
      --tw-backdrop-invert: ;
      --tw-backdrop-opacity: ;
      --tw-backdrop-saturate: ;
      --tw-backdrop-sepia:
    }

    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border-width: 0
    }

    .fixed {
      position: fixed
    }

    .absolute {
      position: absolute
    }

    .relative {
      position: relative
    }

    .inset-0 {
      inset: 0px
    }

    .top-5 {
      top: 1.25rem
    }

    .-z-10 {
      z-index: -10
    }

    .z-10 {
      z-index: 10
    }

    .mx-auto {
      margin-left: auto;
      margin-right: auto
    }

    .mb-8 {
      margin-bottom: 2rem
    }

    .flex {
      display: flex
    }

    .grid {
      display: grid
    }

    .h-10 {
      height: 2.5rem
    }

    .h-20 {
      height: 5rem
    }

    .h-24 {
      height: 6rem
    }

    .min-h-screen {
      min-height: 100vh
    }

    .w-10 {
      width: 2.5rem
    }

    .w-20 {
      width: 5rem
    }

    .w-24 {
      width: 6rem
    }

    .w-40 {
      width: 10rem
    }

    .max-w-md {
      max-width: 28rem
    }

    .origin-top {
      transform-origin: top
    }

    .cursor-pointer {
      cursor: pointer
    }

    .flex-col {
      flex-direction: column
    }

    .place-items-center {
      place-items: center
    }

    .items-center {
      align-items: center
    }

    .justify-center {
      justify-content: center
    }

    .gap-2 {
      gap: 0.5rem
    }

    .gap-8 {
      gap: 2rem
    }

    .space-y-4> :not([hidden])~ :not([hidden]) {
      --tw-space-y-reverse: 0;
      margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(1rem * var(--tw-space-y-reverse))
    }

    .overflow-hidden {
      overflow: hidden
    }

    .rounded-2xl {
      border-radius: 1rem
    }

    .rounded-3xl {
      border-radius: 1.5rem
    }

    .rounded-full {
      border-radius: 9999px
    }

    .border {
      border-width: 1px
    }

    .border-violet-500\/50 {
      border-color: rgb(139 92 246 / 0.5)
    }

    .bg-white {
      --tw-bg-opacity: 1;
      background-color: rgb(255 255 255 / var(--tw-bg-opacity))
    }

    .bg-gradient-to-r {
      background-image: linear-gradient(to right, var(--tw-gradient-stops))
    }

    .from-violet-200 {
      --tw-gradient-from: #ddd6fe var(--tw-gradient-from-position);
      --tw-gradient-to: rgb(221 214 254 / 0) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
    }

    .via-amber-100 {
      --tw-gradient-to: rgb(254 243 199 / 0) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-from), #fef3c7 var(--tw-gradient-via-position), var(--tw-gradient-to)
    }

    .to-violet-100 {
      --tw-gradient-to: #ede9fe var(--tw-gradient-to-position)
    }

    .p-2 {
      padding: 0.5rem
    }

    .px-4 {
      padding-left: 1rem;
      padding-right: 1rem
    }

    .text-center {
      text-align: center
    }

    .text-xs {
      font-size: 0.75rem;
      line-height: 1rem
    }

    .font-semibold {
      font-weight: 600
    }

    .text-black {
      --tw-text-opacity: 1;
      color: rgb(0 0 0 / var(--tw-text-opacity))
    }

    .text-violet-700 {
      --tw-text-opacity: 1;
      color: rgb(109 40 217 / var(--tw-text-opacity))
    }

    .opacity-70 {
      opacity: 0.7
    }

    .shadow-xl {
      --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
      --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
    }

    .transition {
      transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms
    }

    .transition-all {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms
    }

    .delay-200 {
      transition-delay: 200ms
    }

    .duration-500 {
      transition-duration: 500ms
    }

    .ease-in-out {
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1)
    }

    .\[grid-template-areas\:\'stack\'\] {
      grid-template-areas: 'stack'
    }

    .before\:absolute::before {
      content: var(--tw-content);
      position: absolute
    }

    .before\:inset-\[0_100\%_0_0\]::before {
      content: var(--tw-content);
      inset: 0 100% 0 0
    }

    .before\:-z-10::before {
      content: var(--tw-content);
      z-index: -10
    }

    .before\:bg-gradient-to-r::before {
      content: var(--tw-content);
      background-image: linear-gradient(to right, var(--tw-gradient-stops))
    }

    .before\:from-violet-900::before {
      content: var(--tw-content);
      --tw-gradient-from: #4c1d95 var(--tw-gradient-from-position);
      --tw-gradient-to: rgb(76 29 149 / 0) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
    }

    .before\:to-violet-700::before {
      content: var(--tw-content);
      --tw-gradient-to: #6d28d9 var(--tw-gradient-to-position)
    }

    .before\:transition-all::before {
      content: var(--tw-content);
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms
    }

    .before\:duration-500::before {
      content: var(--tw-content);
      transition-duration: 500ms
    }

    .before\:ease-in-out::before {
      content: var(--tw-content);
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1)
    }

    .after\:absolute::after {
      content: var(--tw-content);
      position: absolute
    }

    .after\:inset-\[0_0_0_100\%\]::after {
      content: var(--tw-content);
      inset: 0 0 0 100%
    }

    .after\:-z-10::after {
      content: var(--tw-content);
      z-index: -10
    }

    .after\:bg-gradient-to-l::after {
      content: var(--tw-content);
      background-image: linear-gradient(to left, var(--tw-gradient-stops))
    }

    .after\:from-violet-900::after {
      content: var(--tw-content);
      --tw-gradient-from: #4c1d95 var(--tw-gradient-from-position);
      --tw-gradient-to: rgb(76 29 149 / 0) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
    }

    .after\:to-violet-700::after {
      content: var(--tw-content);
      --tw-gradient-to: #6d28d9 var(--tw-gradient-to-position)
    }

    .after\:transition-all::after {
      content: var(--tw-content);
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms
    }

    .after\:duration-500::after {
      content: var(--tw-content);
      transition-duration: 500ms
    }

    .after\:ease-in-out::after {
      content: var(--tw-content);
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1)
    }

    .hover\:h-\[24rem\]:hover {
      height: 24rem
    }

    .hover\:w-\[14rem\]:hover {
      width: 14rem
    }

    .hover\:scale-125:hover {
      --tw-scale-x: 1.25;
      --tw-scale-y: 1.25;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .hover\:bg-amber-200:hover {
      --tw-bg-opacity: 1;
      background-color: rgb(253 230 138 / var(--tw-bg-opacity))
    }

    .hover\:p-4:hover {
      padding: 1rem
    }

    .group:hover .group-hover\:delay-\[500ms\] {
      transition-delay: 500ms
    }

    .group:hover .group-hover\:delay-\[800ms\] {
      transition-delay: 800ms
    }

    .peer:checked~.peer-checked\:bg-violet-300 {
      --tw-bg-opacity: 1;
      background-color: rgb(196 181 253 / var(--tw-bg-opacity))
    }

    .peer:checked~.peer-checked\:delay-150 {
      transition-delay: 150ms
    }

    .peer:checked~.peer-checked\:before\:inset-\[0_50\%_0_0\]::before {
      content: var(--tw-content);
      inset: 0 50% 0 0
    }

    .peer:checked~.peer-checked\:after\:inset-\[0_0_0_50\%\]::after {
      content: var(--tw-content);
      inset: 0 0 0 50%
    }

    .peer:checked~.peer-checked\:hover\:bg-violet-600:hover {
      --tw-bg-opacity: 1;
      background-color: rgb(124 58 237 / var(--tw-bg-opacity))
    }

    @media (min-width: 400px) {
      .min-\[400px\]\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr))
      }

      .min-\[400px\]\:hover\:h-\[22rem\]:hover {
        height: 22rem
      }

      .min-\[400px\]\:hover\:w-\[22rem\]:hover {
        width: 22rem
      }
    }

    @media (min-width: 640px) {
      .sm\:hover\:p-8:hover {
        padding: 2rem
      }
    }

    .\[\&\>\#dark\]\:text-violet-500>#dark {
      --tw-text-opacity: 1;
      color: rgb(139 92 246 / var(--tw-text-opacity))
    }

    .peer:checked~.peer-checked\:\[\&\>\#dark\]\:scale-0>#dark {
      --tw-scale-x: 0;
      --tw-scale-y: 0;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .\[\&\>\#light\]\:scale-0>#light {
      --tw-scale-x: 0;
      --tw-scale-y: 0;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .peer:checked~.peer-checked\:\[\&\>\#light\]\:scale-100>#light {
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .\[\&\>\*\]\:translate-y-96>* {
      --tw-translate-y: 24rem;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .\[\&\>button\>span\]\:text-base>button>span {
      font-size: 1rem;
      line-height: 1.5rem
    }

    .\[\&\>button\]\:relative>button {
      position: relative
    }

    .\[\&\>button\]\:isolate>button {
      isolation: isolate
    }

    .\[\&\>button\]\:flex>button {
      display: flex
    }

    .\[\&\>button\]\:items-center>button {
      align-items: center
    }

    .\[\&\>button\]\:justify-center>button {
      justify-content: center
    }

    .\[\&\>button\]\:gap-2>button {
      gap: 0.5rem
    }

    .\[\&\>button\]\:overflow-hidden>button {
      overflow: hidden
    }

    .\[\&\>button\]\:rounded-full>button {
      border-radius: 9999px
    }

    .\[\&\>button\]\:bg-amber-100>button {
      --tw-bg-opacity: 1;
      background-color: rgb(254 243 199 / var(--tw-bg-opacity))
    }

    .\[\&\>button\]\:px-4>button {
      padding-left: 1rem;
      padding-right: 1rem
    }

    .\[\&\>button\]\:py-2>button {
      padding-top: 0.5rem;
      padding-bottom: 0.5rem
    }

    .\[\&\>button\]\:text-xs>button {
      font-size: 0.75rem;
      line-height: 1rem
    }

    .before\:\[\&\>button\]\:absolute>button::before {
      content: var(--tw-content);
      position: absolute
    }

    .before\:\[\&\>button\]\:inset-0>button::before {
      content: var(--tw-content);
      inset: 0px
    }

    .before\:\[\&\>button\]\:-z-10>button::before {
      content: var(--tw-content);
      z-index: -10
    }

    .before\:\[\&\>button\]\:from-violet-400>button::before {
      content: var(--tw-content);
      --tw-gradient-from: #a78bfa var(--tw-gradient-from-position);
      --tw-gradient-to: rgb(167 139 250 / 0) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
    }

    .before\:\[\&\>button\]\:transition-all>button::before {
      content: var(--tw-content);
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms
    }

    .before\:\[\&\>button\]\:duration-300>button::before {
      content: var(--tw-content);
      transition-duration: 300ms
    }

    .before\:first\:\[\&\>button\]\:translate-x-full>button:first-child::before {
      content: var(--tw-content);
      --tw-translate-x: 100%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .before\:first\:\[\&\>button\]\:bg-gradient-to-l>button:first-child::before {
      content: var(--tw-content);
      background-image: linear-gradient(to left, var(--tw-gradient-stops))
    }

    .before\:last\:\[\&\>button\]\:-translate-x-full>button:last-child::before {
      content: var(--tw-content);
      --tw-translate-x: -100%;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .before\:last\:\[\&\>button\]\:bg-gradient-to-r>button:last-child::before {
      content: var(--tw-content);
      background-image: linear-gradient(to right, var(--tw-gradient-stops))
    }

    .hover\:before\:\[\&\>button\]\:translate-x-0>button:hover::before {
      content: var(--tw-content);
      --tw-translate-x: 0px;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
    }

    .peer:checked~.peer-checked\:\[\&\>img\]\:h-28>img {
      height: 7rem
    }

    .peer:checked~.peer-checked\:\[\&\>img\]\:w-28>img {
      width: 7rem
    }

    .\[\&\>section\:hover\>div\>\*\]\:\!translate-y-0>section:hover>div>* {
      --tw-translate-y: 0px !important;
      transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important
    }

    .\[\&\>section\:hover\>div\>\*\]\:\!duration-700>section:hover>div>* {
      transition-duration: 700ms !important
    }

    .\[\&\>section\:hover\]\:\!duration-700>section:hover {
      transition-duration: 700ms !important
    }

    .\[\&\>span\]\:text-lg>span {
      font-size: 1.125rem;
      line-height: 1.75rem
    }

    .\[\&\>span\]\:text-white>span {
      --tw-text-opacity: 1;
      color: rgb(255 255 255 / var(--tw-text-opacity))
    }

    .\[\&\>span\]\:\[grid-area\:stack\]>span {
      grid-area: stack
    }

    .\[\&_\*\]\:transition-all * {
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 150ms
    }

    .\[\&_\*\]\:duration-500 * {
      transition-duration: 500ms
    }

    .\[\&_\*\]\:ease-in-out * {
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1)
    }
  </style>
</head>

<body class="bg-gradient-to-r from-violet-200 via-amber-100 to-violet-100   text-black flex flex-col  justify-center  items-center min-h-screen px-4 
            [&amp;_*]:transition-all 
            [&amp;_*]:ease-in-out 
            [&amp;_*]:duration-500
            [&amp;>section:hover]:!duration-700
            [&amp;>section:hover>div>*]:!duration-700
            [&amp;>section:hover>div>*]:!translate-y-0
        ">

  <!-- theme toggle radio -->
  <input type="checkbox" id="theme" class="sr-only peer">

  <section class="group max-w-md w-24 h-24 rounded-3xl bg-white p-2 cursor-pointer shadow-xl origin-top relative flex flex-col items-center text-center gap-8 overflow-hidden relative delay-50 
                hover:p-4
                sm:hover:p-8
                hover:w-[14rem]
                hover:h-[24rem]
                min-[400px]:hover:w-[22rem]
                min-[400px]:hover:h-[22rem]
                peer-checked:bg-violet-300
                peer-checked:delay-150
                peer-checked:[&amp;>img]:w-28
                peer-checked:[&amp;>img]:h-28
            ">
    <img src="https://i.pravatar.cc/120?img=21" class="w-20 h-20 rounded-2xl" alt="Frances S. Cady">
    <div class="space-y-4 [&amp;>*]:translate-y-96">
      <hgroup class="w-40 mx-auto  delay-200 group-hover:delay-[500ms]">
        <h2 class="font-semibold">Frances S. Cady</h2>
        <p class="text-xs opacity-70 mb-8">Building nex-gen energy tech product at Company</p>
      </hgroup>

      <div class="grid min-[400px]:grid-cols-2  gap-2 delay-200 group-hover:delay-[800ms]
                        [&amp;>button]:flex
                        [&amp;>button]:items-center
                        [&amp;>button]:justify-center
                        [&amp;>button]:gap-2
                        [&amp;>button]:rounded-full
                        [&amp;>button]:bg-amber-100
                        [&amp;>button]:text-xs
                        [&amp;>button]:py-2
                        [&amp;>button]:px-4
                        [&amp;>button]:relative
                        [&amp;>button]:overflow-hidden
                        [&amp;>button]:isolate
                        before:[&amp;>button]:absolute
                        before:[&amp;>button]:inset-0
                        before:[&amp;>button]:from-violet-400
                        before:[&amp;>button]:to-anber-800
                        before:[&amp;>button]:transition-all
                        before:[&amp;>button]:duration-300
                        before:first:[&amp;>button]:bg-gradient-to-l
                        before:last:[&amp;>button]:bg-gradient-to-r
                        before:first:[&amp;>button]:translate-x-full
                        before:last:[&amp;>button]:-translate-x-full
                        hover:before:[&amp;>button]:translate-x-0
                        before:[&amp;>button]:-z-10
                        [&amp;>button>span]:text-base
                    ">
        <button type="button">
          <span class="material-symbols-outlined">person_add</span>
          Follow
        </button>
        <button type="button">
          <span class="material-symbols-outlined">chat</span>
          Send Message
        </button>
      </div>
    </div>
  </section>

  <!-- theme toggle switch -->
  <label for="theme" class="absolute top-5 grid [grid-template-areas:'stack'] place-items-center cursor-pointer w-10 h-10 rounded-full text-violet-700 transition  z-10 border border-violet-500/50 hover:bg-amber-200 hover:scale-125
                    [&amp;>span]:[grid-area:stack]
                    [&amp;>span]:text-lg
                    [&amp;>span]:text-white
                    [&amp;>#light]:scale-0 
                    [&amp;>#dark]:text-violet-500
                    peer-checked:[&amp;>#dark]:scale-0 
                    peer-checked:[&amp;>#light]:scale-100
                    peer-checked:hover:bg-violet-600
                ">
    <span id="dark" class="material-symbols-outlined">dark_mode</span>
    <span id="light" class="material-symbols-outlined">light_mode</span>
  </label>


  <!-- bg mask -->
  <div class="fixed inset-0 -z-10  transition-all duration-500 ease-in-out 
                before:absolute
                before:inset-[0_100%_0_0]
                before:bg-gradient-to-r 
                before:from-violet-900
                before:to-violet-700
                before:-z-10
                before:transition-all
                before:duration-500
                before:ease-in-out
                peer-checked:before:inset-[0_50%_0_0]
                after:absolute
                after:inset-[0_0_0_100%]
                after:bg-gradient-to-l 
                after:from-violet-900
                after:to-violet-700
                after:-z-10
                after:transition-all
                after:duration-500
                after:ease-in-out
                peer-checked:after:inset-[0_0_0_50%]   
            ">
  </div>

  <style>
    /* Add CSS here */
  </style>
  <script type="module">
    // marcinmalecki preview hack
    // NOTE - This JS is not relevant to the submission, it is just to ensure that the preview thumnail looks ok.
    if (navigator.userAgent.includes("Headless")) {
      document.querySelector("#theme").checked = true;
    }

    // toggle theme switch if user prefers "dark"
    let theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    if (theme == 'dark') {
      document.querySelector("#theme").checked = true;
    }
  </script>
</body>

</html>