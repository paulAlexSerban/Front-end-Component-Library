name: CI/CD - FEAT / FIX / REFACTOR / PERF / REVERT / TEST
on:
    push:
        branches:
            - feat/*
            - fix/*
            - refactor/*
            - perf/*
            - revert/*
            - test/*
    pull_request:
        types: [synchronize]
    workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

env:
    NODE_VERSION: 18.17.1
    BASE_URL: ${{ secrets.BASE_URL }}

jobs:
    formats-check:
        name: 'Formats Check'
        runs-on: ubuntu-latest

        steps:
            - name: '📥 checkout repository'
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: '🔧  Setup NodeJS ${{ env.NODE_VERSION }}'
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'yarn'

            - name: '🔧 Install dependencies'
              run: yarn install

            - name: 'Format Check'
              run: yarn run formats:check

    build-n-package:
        name: 'Build & Package'
        runs-on: ubuntu-latest
        needs: [formats-check]
        steps:
            - name: '📥 checkout repository'
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: '🔍  Verify Changed Files [shared, backend, database, frontend, assets]'
              uses: tj-actions/changed-files@v35
              id: changed-test-files
              with:
                  files: |
                      shared/**/*
                      frontend/**/*
                      assets/**/*
                      backend/**/*
                      database/**/*

            - name: '🔧  Setup NodeJS ${{ env.NODE_VERSION }}'
              if: steps.changed-test-files.outputs.any_changed == 'true'
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'yarn'

            - name: '🔧 Install dependencies'
              if: steps.changed-test-files.outputs.any_changed == 'true'
              run: yarn install

            - name: 'Run Build'
              if: steps.changed-test-files.outputs.any_changed == 'true'
              run: yarn run build:prod

            - name: 'Package ./libraries'
              if: steps.changed-test-files.outputs.any_changed == 'true'
              run: yarn run package

            - name: 'Upload libraries artifact'
              if: steps.changed-test-files.outputs.any_changed == 'true'
              uses: actions/upload-artifact@v3
              with:
                  name: libraries-${{ github.run_number }}-${{ github.run_id }}
                  path: './package/libraries/'

    deploy-dev:
        name: 'Deploy to Netlify DEV env.'
        runs-on: ubuntu-latest
        needs: [build-n-package]
        steps:
            - name: '📥 checkout repository'
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: '🔍  Verify Changed Files [shared, backend, database, frontend, assets]'
              uses: tj-actions/changed-files@v35
              id: changed-test-files
              with:
                  files: |
                      shared/**/*
                      frontend/**/*
                      assets/**/*
                      backend/**/*
                      database/**/*

            - name: 'Create package/dist'
              if: steps.changed-test-files.outputs.any_changed == 'true'
              run: mkdir -p package/libraries

            - uses: actions/download-artifact@v3
              if: steps.changed-test-files.outputs.any_changed == 'true'
              with:
                  name: libraries-${{ github.run_number }}-${{ github.run_id }}
                  path: package/libraries

            - name: Upload artifact
              if: steps.changed-test-files.outputs.any_changed == 'true'
              uses: actions/upload-pages-artifact@v2
              with:
                  # Upload entire repository
                  path: './package/libraries'

            - name: '🔧 Setup Pages'
              if: steps.changed-test-files.outputs.any_changed == 'true'
              uses: actions/configure-pages@v3

            - name: '🚀 Deploy to GitHub Pages'
              if: steps.changed-test-files.outputs.any_changed == 'true'
              id: deployment
              uses: actions/deploy-pages@v2
